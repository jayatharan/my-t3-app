import { type NextPage } from "next";
import Head from "next/head";
import { useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { RouterOutputs, api } from "~/utils/api";
import Image from "next/image";
import { LoadingPage, LoadingSpinner } from "~/components/loading";
import { useState } from "react";


const CreatePostWizard = () => {
  const {user} = useUser();
  const [content, setContent] = useState("");
  const ctx =  api.useContext();
  
  const {mutate, isLoading: isPosting} = api.post.create.useMutation({
    onSuccess:() => {
      setContent("");
      void ctx.post.getAll.invalidate();
    }
  });


  if(!user) return null;

  return (
    <div className="flex gap-3 w-full">
      <Image src={user.profileImageUrl} width={56} height={56} alt="Profile Image" className="w-14 h-14 rounded-full" />
      <input 
        type="text" 
        value={content} 
        onChange={(e) => setContent(e.target.value)} 
        placeholder="Type something to post" 
        className="grow bg-transparent outline-none" 
        disabled={isPosting}
      />
      <button disabled={isPosting} onClick={() => mutate({content})}>Post</button>
    </div>
  )

}

type PostWithUser = RouterOutputs["post"]["getAll"][number];

const PostView = (props:PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex p-4 border-b border-slate-400 gap-3">
      <Image src={author.profileImageUrl} width={56} height={56} alt="Author Profile Image" className="w-14 h-14 rounded-full" />
      <div className="flex flex-col">
        <div className="flex text-slate-300 gap-1">
          <span>{`@${author.username}`}</span><span>Â·</span><span>{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span className="text-lg">
          {post.content}
        </span>
      </div>
    </div>
  )
}

const Home: NextPage = () => {

  const user = useUser();

  const {data, isLoading} = api.post.getAll.useQuery();

  if(isLoading) return <LoadingPage />

  if(!data) return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full h-full md:max-w-2xl border-x border-slate-400">
          <div className="flex border-b border-slate-400 p-4">
            {user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {data.map((fullPost, index) => (
              <PostView key={index} {...fullPost} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
